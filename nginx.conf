# frontend/nginx.conf
server {
    listen 80;
    server_name localhost;
    
        # ✅ 업로드 용량 한도 상향 (필요 용량으로 조정: 10M/20M/50M 등)
    client_max_body_size 100M;
    client_body_timeout 60s;

    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }
    
    # API 프록시 설정 (CORS 회피)
    location /api {
        proxy_pass http://spring-boot:9000;
        proxy_http_version 1.1;
        
        # 대용량 업로드 시 버퍼 대신 스트리밍
        proxy_request_buffering off;

        # 느린 업로드 대비
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location = /login {
        # CORS preflight(OPTIONS) 204 처리(필요 시)
        if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin $http_origin;
        add_header Access-Control-Allow-Credentials true;
        add_header Access-Control-Allow-Headers $http_access_control_request_headers;
        add_header Access-Control-Allow-Methods "POST, OPTIONS";
        return 204;
        }

        proxy_pass http://spring-boot:9000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_read_timeout 120s;
        proxy_send_timeout 120s;
    }
    
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}